<project name="LingPipe" default="jar" basedir="." xmlns:if="ant:if" xmlns:maven="antlib:org.eclipse.aether.ant">
	<description>
    GATE Resources for LingPipe
  </description>

	<!-- Prevent Ant from warning about includeantruntime not being set -->
	<property name="build.sysclasspath" value="ignore" />

	<property name="plugin.version" value="8.5-SNAPSHOT" />

	<!-- set global properties for this build -->
	<property name="src" location="src" />
	<property name="build" location="build" />
	<property name="dist" location="dist" />
	<property name="jar.location" location="lingpipe.jar" />
	<property name="distro.location" location="gateplugin-LingPipe-${plugin.version}.zip" />
	<property name="doc.dir" location="doc" />
	<property name="javadoc.dir" location="${doc.dir}/javadoc" />

	<property name="gate.compile.maxwarnings" value="10000" />

	<!-- download a copy of aether ant tasks if we don't have them already
	     NOTE: at some point switch to using Apache Maven Resolver for this -->
	<get src="http://search.maven.org/remotecontent?filepath=org/eclipse/aether/aether-ant-tasks/1.0.0.v20140518/aether-ant-tasks-1.0.0.v20140518-uber.jar" dest="aether-ant-tasks-uber.jar" verbose="true" skipexisting="true" />
	<fail message="Checksum mismatch for 'aether-ant-tasks-uber.jar'. Please delete it and rerun ant to redownload.">
		<condition>
			<not>
				<checksum file="aether-ant-tasks-uber.jar" algorithm="SHA" property="95dadd03392a75564904da45108cf048abe6e5bb" verifyproperty="checksum.matches" />
			</not>
		</condition>
	</fail>

	<path id="aether-ant-tasks.classpath" path="aether-ant-tasks-uber.jar" />
	<typedef resource="org/eclipse/aether/ant/antlib.xml" uri="antlib:org.eclipse.aether.ant" classpathref="aether-ant-tasks.classpath" />
	
	<!-- build the gate-core classpath via maven -->
	<maven:resolve>
		<maven:dependencies>
			<maven:dependency groupid="uk.ac.gate" artifactid="gate-core" version="8.5-SNAPSHOT" />
		</maven:dependencies>
		<path refid="gate.classpath" classpath="compile" />
	</maven:resolve>

	<target name="init">
		<!-- Create the time stamp -->
		<tstamp />
		<!-- Create the build directory structure used by compile -->
		<mkdir dir="${build}" />
	</target>

	<path id="classpath">
		<fileset dir="lib">
			<include name="*.jar" />
		</fileset>
		<path refid="gate.classpath" />
	</path>

	<target name="compile" depends="init" description="compile the source ">
		<!-- Compile the java code from ${src} into ${build} -->
		<javac srcdir="${src}" destdir="${build}" debug="true" source="1.8" target="1.8">
			<classpath refid="classpath" />
			<compilerarg value="-Xmaxwarns" />
			<compilerarg value="${gate.compile.maxwarnings}" />
			<compilerarg value="-Xlint:all" />
		</javac>
	</target>

	<!-- Build JavaDoc documentation -->
	<target name="doc.prepare">
		<mkdir dir="${javadoc.dir}" />
	</target>

	<target name="javadoc" depends="doc.prepare">
		<javadoc destdir="${javadoc.dir}" packagenames="*" classpathref="classpath" encoding="UTF-8" windowtitle="${plugin.name} JavaDoc" source="1.8">
			<sourcepath>
				<pathelement location="${src}" />
			</sourcepath>
			<link href="http://docs.oracle.com/javase/8/docs/api/" />
			<link href="http://gate.ac.uk/gate/doc/javadoc/" />
		</javadoc>
	</target>


	<target name="jar" depends="compile" description="generate the distribution">
		<!-- Put everything in ${build} into the MyProject-${DSTAMP}.jar file -->
		<jar jarfile="${jar.location}" basedir="${build}" />
	</target>

	<target name="clean.classes" description="clean up">
		<!-- Delete the ${build} and ${dist} directory trees -->
		<delete dir="${build}" />
		<delete dir="${dist}" />
	</target>

	<target name="clean" depends="clean.classes">
		<!-- full clean also removes the generated JAR file -->
		<delete file="${jar.location}" />
	</target>

	<!-- Targets used by the main GATE build file -->
	<target name="build" depends="jar" />
	<target name="test" />
	<target name="distro.prepare" depends="clean.classes" />

	<target name="distro" depends="jar">
		<property name="distro.prefix" value="gateplugin-LingPipe-${plugin.version}" />
		<zip destfile="${distro.location}">
			<zipfileset prefix="${distro.prefix}"
					dir="${basedir}">
				<exclude name="*.zip" />
				<exclude name="build/**" />
				<exclude name=".github/**" />
				<exclude name="TEST*" />
				<exclude name="aether-ant-tasks-uber.jar" />
				<exclude name="*.iml" />
				<exclude name="junit-*.html" />
			</zipfileset>
		</zip>
	</target>
</project>
